{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","handleClick","className","map","todo","id","completed","classNames","title","type","onClick","userId","TodoFilter","handleSelect","handleInpput","useState","inputValue","setInputValue","onChange","e","currentTarget","value","placeholder","style","pointerEvents","Loader","TodoModal","handleClose","activeUser","setActiveUser","isLoading","setIsLoading","useEffect","getUser","response","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","isLoaded","setIsLoaded","isModalOpened","setIsModalOpened","activeUserId","setActiveUserId","activeTodo","setActiveTodo","newTodos","filter","toLowerCase","includes","todoId","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7656b970.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleClick: (userId: number, todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, handleClick }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              && (\n                <span>\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                handleClick(todo.userId, todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  handleSelect: (value: string) => void,\n  handleInpput: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleSelect, handleInpput }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              handleSelect(e.currentTarget.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.currentTarget.value);\n            handleInpput(e.currentTarget.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue !== ''\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setInputValue('');\n                  handleInpput('');\n                }}\n              />\n            )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number,\n  handleClose: () => void,\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ userId, handleClose, todo }) => {\n  const [activeUser, setActiveUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId).then(response => {\n      setActiveUser(response);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              {activeUser\n                && (\n                  <a href={`mailto:${activeUser.email}`}>\n                    {activeUser.name}\n                  </a>\n                )}\n\n            </p>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [activeUserId, setActiveUserId] = useState(0);\n  const [activeTodo, setActiveTodo] = useState<Todo>();\n\n  const openModal = (userId:number, todoId:number) => {\n    setIsModalOpened(true);\n    setActiveUserId(userId);\n\n    const selectedTodo = todos.find(todo => todo.id === todoId);\n\n    setActiveTodo(selectedTodo);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(response => {\n      setTodos(response);\n      setVisibleTodos(response);\n      setIsLoading(false);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  const onSelect = (value:string) => {\n    if (value === 'active') {\n      const newTodos = visibleTodos\n        .filter(todo => todo.completed === false);\n\n      setVisibleTodos(newTodos);\n    }\n\n    if (value === 'completed') {\n      const newTodos = visibleTodos\n        .filter(todo => todo.completed === true);\n\n      setVisibleTodos(newTodos);\n    }\n\n    if (value === 'all') {\n      setVisibleTodos(todos);\n    }\n  };\n\n  const onInput = (value:string) => {\n    const newTodos = todos.filter(todo => {\n      return todo.title.toLowerCase().includes(value.toLowerCase());\n    });\n\n    setVisibleTodos(newTodos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSelect={onSelect}\n                handleInpput={onInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                && <Loader />}\n\n              {isLoaded\n                && <TodoList todos={visibleTodos} handleClick={openModal} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpened && activeTodo\n        && <TodoModal handleClose={closeModal} userId={activeUserId} todo={activeTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}